{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","App.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/ButtonClose/ButtonClose.module.css","services/pixabayApi.js","components/Section/Section.js","components/Container/Container.js","components/Searchbar/Searchbar.js","components/SearchForm/SearchForm.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Spinner/Spinner.js","components/ButtonClose/ButtonClose.js","components/Modal/Modal.js","App.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","axios","defaults","baseURL","serchQuery","currentPage","pageSize","get","then","response","data","Section","children","className","styles","section","Container","title","container","defaultProps","Searchbar","searchbar","SearchForm","state","search","handleChangeInput","e","value","currentTarget","setState","handleSubmitForm","preventDefault","props","onSubmit","resetForm","this","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","defaulProps","ImageGalleryItem","src","alt","onClick","imageGalleryItemImage","ImageGallery","images","openlargeImageURL","imageGallery","map","id","webformatURL","tags","largeImageURL","selectedImageModal","Button","onIncrement","button","Spinner","loaderSpinner","color","height","width","timeout","onClose","data-action","closeButton","modalRoot","document","querySelector","Modal","handleKeyDown","code","handleBackdropClose","target","window","addEventListener","removeEventListener","url","createPortal","overlay","modal","ButtonClose","App","isLoading","hasError","showModal","fetchSearchImages","options","pixabayApi","hits","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","finally","onSubmitSearch","searchValue","handleClickBtnIncrement","toggleModal","handleLargeImageModal","prevProps","info","console","log","alert","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec4becb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__sfyeP\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__2WE_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3lS9J\",\"modal\":\"Modal_modal__19ezq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1nP30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__de8WF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3mVwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2MPy7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1gz3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3wKA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderSpinner\":\"Spinner_loaderSpinner__3J5ga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeButton\":\"ButtonClose_closeButton__1sNAO\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst apiKey = '19909121-fe72a6a4c0f185ae96ac43b20';\r\n\r\n//делаем запрос на API на получение картинок\r\nconst fetchImagesfromApi = ({\r\n  serchQuery = '',\r\n  currentPage = 1,\r\n  pageSize = 12,\r\n}) => {\r\n  return axios\r\n    .get(\r\n      `/?key=${apiKey}&q=${serchQuery}&image_type=photo&page=${currentPage}&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nexport default { fetchImagesfromApi };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => {\r\n  return <section className={styles.section}>{children}</section>;\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Searchbar.module.css';\r\n\r\nconst Searchbar = ({ children }) => (\r\n  <header className={styles.searchbar}>{children}</header>\r\n);\r\n\r\nSearchbar.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './SearchForm.module.css';\r\n\r\nclass SearchForm extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  static defaulProps = {\r\n    search: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    search: PropTypes.string,\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    // console.log(e.currentTarget.value);\r\n    const { value } = e.currentTarget;\r\n    this.setState({\r\n      search: value,\r\n    });\r\n  };\r\n\r\n  handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.onSubmit(this.state.search);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      search: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <form className={styles.searchForm} onSubmit={this.handleSubmitForm}>\r\n        <button type=\"submit\" className={styles.searchFormButton}>\r\n          <span className={styles.searchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles.searchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={search}\r\n          onChange={this.handleChangeInput}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ src, alt, onClick }) => (\r\n  <li className={styles.imageGalleryItemImage}>\r\n    <img\r\n      src={src}\r\n      alt={alt}\r\n      className={styles.imageGalleryItemImage}\r\n      onClick={onClick}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ images, openlargeImageURL }) => (\r\n  <ul className={styles.imageGallery}>\r\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n      \r\n      const getImageLink = () => openlargeImageURL(largeImageURL); //записываем инлайн коллбек в функцию для передачи как проп детям\r\n\r\n      return (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          selectedImageModal={largeImageURL}\r\n          onClick={getImageLink}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  openlargeImageURL: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ onIncrement }) => (\r\n  <button type=\"button\" className={styles.button} onClick={onIncrement}>\r\n    Load more...\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onIncrement: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader\r\n      className={styles.loaderSpinner}\r\n      type=\"ThreeDots\"\r\n      color=\"#3f51b5\"\r\n      height={80}\r\n      width={80}\r\n      timeout={3000}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styles from './ButtonClose.module.css';\r\n\r\nconst Button = ({ onClose }) => (\r\n  <button\r\n    type=\"button\"\r\n    data-action=\"close-lightbox\"\r\n    className={styles.closeButton}\r\n    onClick={onClose}\r\n  ></button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom'; // импорт метода для создания портала для модалки\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ButtonClose from '../ButtonClose';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root'); //находим элемент в ДОМе, чтоб зарендерить в него разметку модалки\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    //вешаем слушателя на window на событие нажатия кнопки\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //снимаем слушателя с window на событие нажатия кнопки, чтобы избежать утечки памяти\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  //метод для закрытия модалки по кнопке ESC\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  //метод для закрытия модалки по бекдропу\r\n  handleBackdropClose = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { url, onClose } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={styles.overlay} onClick={this.handleBackdropClose}>\r\n        <div className={styles.modal}>\r\n          <img src={url} alt=\"\" />\r\n        </div>\r\n        <ButtonClose onClose={onClose} />\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n//services Api\nimport pixabayApi from './services/pixabayApi';\n\n//import components\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport SearchForm from './components/SearchForm';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner';\nimport Modal from './components/Modal';\n\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    serchQuery: 'love',\n    selectedImageModal: '',\n    isLoading: false,\n    hasError: false,\n    showModal: false,\n  };\n\n  static defaultProps = {\n    images: [],\n    currentPage: 1,\n    serchQuery: '',\n    selectedImageModal: '',\n    isLoading: false,\n    hasError: false,\n    showModal: false,\n  };\n\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n    currentPage: PropTypes.number,\n    serchQuery: PropTypes.string,\n    selectedImageModal: PropTypes.string,\n    isLoading: PropTypes.bool,\n    hasError: PropTypes.bool,\n    showModal: PropTypes.bool,\n  };\n\n  componentDidMount() {\n    this.fetchSearchImages(); //делаем HTTP-запрос для отображения картинок на странице сразу, при монтировании компонента\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //при обновлении компонента проверяем изменился ли state и делаем новый запрос для отрисовки\n    if (prevState.serchQuery !== this.state.serchQuery) {\n      this.fetchSearchImages();\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n    console.log(error);\n  }\n\n  fetchSearchImages = () => {\n    //выносим get запрос в отдельную функцию для удобства переиспользования\n    const { serchQuery, currentPage } = this.state;\n    const options = { serchQuery, currentPage }; //передаем параметры в объекте настроек\n\n    this.setState({ isLoading: true }); //показываем спиннер пока идет запрос\n\n    pixabayApi\n      .fetchImagesfromApi(options)\n      .then(({ hits }) => {\n        // console.log(hits);\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n\n        if (currentPage > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .catch(error => this.setState({ hasError: true }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  //метод, который получает данные с формы и перезаписывает state App\n  onSubmitSearch = searchValue => {\n    // console.log(searchValue);\n    this.setState({\n      serchQuery: searchValue, //сохраняем каждое новое значение с инпута в стейт для пагинации\n      images: [], //записываем пустой массив для отрисовки новых картинок по новому запросу\n      currentPage: 1, //сбрасываем currentPage в начальное состояние при новом запросе\n      hasError: false, //сбрасываем error в начальное состояние при новом запросе\n      selectedImageModal: '', //сбрасываем url картинки для модалки\n    });\n  };\n\n  handleClickBtnIncrement = () => {\n    //при клике на кнопку Load more делаем новый запрос на API\n    this.fetchSearchImages();\n  };\n\n  //метод для закрытия и открытия модалки\n  toggleModal = () => {\n    this.setState(state => ({\n      showModal: !this.state.showModal,\n    }));\n  };\n\n  //метод для получения ссылки на большое изображение для модалки\n  handleLargeImageModal = url => {\n    this.setState({ selectedImageModal: url });\n    // console.log(url);\n    this.toggleModal();\n  };\n\n  render() {\n    const {\n      images,\n      isLoading,\n      hasError,\n      selectedImageModal,\n      showModal,\n    } = this.state;\n\n    return (\n      <>\n        {hasError && alert('Something went wrong, please try again later :(')}\n        <Searchbar>\n          <Container>\n            <SearchForm onSubmit={this.onSubmitSearch} />\n          </Container>\n        </Searchbar>\n        <Section>\n          <Container className={styles.App}>\n            <div className={styles.App}>\n              <ImageGallery\n                images={images}\n                openlargeImageURL={this.handleLargeImageModal}\n              />\n              {isLoading && <Spinner />}\n              {images.length >= 12 && !isLoading && (\n                <Button onIncrement={this.handleClickBtnIncrement} />\n              )}\n            </div>\n            {showModal && (\n              <Modal onClose={this.toggleModal} url={selectedImageModal} />\n            )}\n          </Container>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__1nisl\",\"searchFormButton\":\"SearchForm_searchFormButton__2Vh5Z\",\"searchFormButtonLabel\":\"SearchForm_searchFormButtonLabel__pVqC2\",\"searchFormInput\":\"SearchForm_searchFormInput__2M3qF\"};"],"sourceRoot":""}